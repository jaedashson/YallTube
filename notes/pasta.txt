//// AJAX testing

// Creating users in dev tools
$.ajax({
  method: "POST",
  url: "/api/users",
  data: { user: { username: "user1", email: "user1@gmail.com", password: "hunter12" }}
});

// Logging out in dev tools
$.ajax({
  method: "DELETE",
  url: "/api/session"
});

// Logging in in dev tools
$.ajax({
  method: "POST",
  url: "/api/session",
  data: { user: { username: "user1", password: "hunter12" }}
});

//// store testing

// Creating users
dispatch(signup({ username: "user4", email: "user4@gmail.com", password: "hunter12" }));

// Logging in
dispatch(login({ username: "user1", password: "hunter12" }));

// Logging out
dispatch(logout())

// Getting user by email
dispatch(getUserByEmail("user1@gmail.com"));

// original sessionReducer
const _nullUser = Object.freeze({ id: null });
const sessionReducer = (state = _nullUser, action) => {
  Object.freeze(state);
  const newState = Object.assign({}, state);
  switch(action.type) {
    case RECEIVE_EMAIL_ATTEMPT:
      debugger
      newState["attemptedUser"] = action.attemptedUser;
      return { attemptedUser: action.attemptedUser };
    case CLEAR_EMAIL_ATTEMPT:
      debugger
      delete newState["attemptedUser"];
      return newState;
    case RECEIVE_CURRENT_USER:
      debugger
      newState["id"] = action.currentUser.id;
      return newState;
    case LOGOUT_CURRENT_USER:
      debugger
      return _nullUser;
    default:
      debugger
      return state;
  }
};


// Making new videos in rails console
Video.new(title: "Video 1", description: "User 1 presents Video 1", uploader_id: 1)